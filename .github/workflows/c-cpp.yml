name: C/C++ CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      RUNNER_DEFAULT_SHELL: bash

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install Dependencies - Windows
        if: runner.os == 'windows'
        run: |
          choco install mingw wxwidgets sqlite make
          choco install gnuwin32-m4
          choco install bash
      - name: Install Dependencies - Linux
        if: runner.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt install libwxgtk3.2-dev || sudo apt install wx3.2-headers
      - name: Install Dependencies - MacOS
        if: runner.os == 'macos'
        run: |
          brew install wxwidgets m4 tinyxml zstd autoconf libtool automake
          brew install libpng sqlite
          brew install dylibbundler
      - name: remove local redundancy to build-deps
        if: runner.os == 'linux' || runner.os == 'macOS'
        run: rm -f mysql* sqlite* && rm -rf clustalw tinyxml
      - name: autogen
        if: runner.os == 'linux' || runner.os == 'macOS'
        run: ./autogen.sh
      - name: configure
        if: runner.os == 'linux' || runner.os == 'macOS'
        run: ./configure
      - name: make
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            make
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            make
          else
            g++ -o GENtle *.cpp ipc/*.cpp
          fi
      - name: install asciidoc
        if: runner.os == 'windows' || runner.os == 'macOS'
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            brew install asciidoc
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt install asciidoc
          fi
      - name: build manual.html
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            asciidoc docs/manual.adoc
          else
            echo "No manual created for ${{ matrix.os }}." > docs/manual.html
          fi
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: GENtle_${{ matrix.os }}
          path: |
            GENtle
            variables.csv
            codon_catalog.csv
            marker.txt
            default.tab
            docs/manual.html
            docs/images
          retention-days: 10
